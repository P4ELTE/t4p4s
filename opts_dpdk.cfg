; option name      new option
noeal                    -> ealopts += --log-level 3
silent=terminal          -> ealopts += --log-level 3
silent=on                -> ealopts += --log-level 3
silent=switch            -> cflags  += -DT4P4S_SILENT
silent=on                -> cflags  += -DT4P4S_SILENT

cores=1                  -> ealopts += -c 0x1 -n 4
cores=2                  -> ealopts += -c 0x3 -n 4
cores=3                  -> ealopts += -c 0x7 -n 4
cores=4                  -> ealopts += -c 0xf -n 4
cores=5                  -> ealopts += -c 0x1f -n 4
cores=6                  -> ealopts += -c 0x3f -n 4
cores=7                  -> ealopts += -c 0x7f -n 4
cores=8                  -> ealopts += -c 0xff -n 4
cores=9                  -> ealopts += -c 0x1ff -n 4
cores=10                 -> ealopts += -c 0x3ff -n 4
cores=11                 -> ealopts += -c 0x7ff -n 4
cores=12                 -> ealopts += -c 0xFff -n 4
cores=13                 -> ealopts += -c 0x1fff -n 4
cores=14                 -> ealopts += -c 0x3fff -n 4
cores=15                 -> ealopts += -c 0x7fff -n 4
cores=16                 -> ealopts += -c 0xffff -n 4

ports=0                  -> cmdopts += --config ""
ports=1x1                -> cmdopts += -p 0x3 --config "\"(0,0,0)\""
ports=1x2                -> cmdopts += -p 0x3 --config "\"(0,0,0),(1,0,0)\""
ports=2x1                -> cmdopts += -p 0x3 --config "\"(0,0,0),(0,1,1)\""
ports=2x2                -> cmdopts += -p 0x3 --config "\"(0,0,0),(0,1,1),(1,0,0),(1,1,1)\""
ports=3x2                -> cmdopts += -p 0x3 --config "\"(0,0,0),(0,1,1),(0,2,2),(1,0,0),(1,1,1),(1,2,2)\""
ports=4x2                -> cmdopts += -p 0x3 --config "\"(0,0,0),(0,1,1),(0,2,2),(0,3,3),(1,0,0),(1,1,1),(1,2,2),(1,3,3)\""
ports=5x2                -> cmdopts += -p 0x3 --config "\"(0,0,0),(0,1,1),(0,2,2),(0,3,3),(0,4,4),(1,0,0),(1,1,1),(1,2,2),(1,3,3),(1,4,4)\""
ports=6x2                -> cmdopts += -p 0x3 --config "\"(0,0,0),(0,1,1),(0,2,2),(0,3,3),(0,4,4),(0,5,5),(1,0,0),(1,1,1),(1,2,2),(1,3,3),(1,4,4),(1,5,5)\""


variant=std              -> include-hdrs += dpdk_nicon.h
variant=std              -> include-srcs += hdep/'dpdk/dpdk_nicon.c'

variant=veth              -> include-hdrs += dpdk_nicon.h
variant=veth              -> include-srcs += hdep/'dpdk/dpdk_nicon.c'

variant=test             -> include-hdrs += dpdk_nicoff.h
variant=test             -> include-srcs += hdep/'dpdk/dpdk_nicoff.c'

tested                   -> include-defs += #define T4P4S_TESTENTRY ${tested}
x_random=fake            -> include-defs += #define T4P4S_FAKERANDOM

model                    -> include-hdrs += gen_model.h
model                    -> include-srcs += xtrn/'dpdk_model_${model}.c'
model                    -> include-srcs += xtrn/'dpdkx_${model}_checksum.c'
model                    -> include-srcs += xtrn/'dpdkx_${model}_clone.c'
model                    -> include-srcs += xtrn/'dpdkx_${model}_hash.c'
model                    -> include-srcs += xtrn/'dpdkx_${model}_random.c'
model                    -> include-srcs += xtrn/'dpdkx_${model}_smem.c'

model=v1model            -> include-srcs += xtrn/'dpdkx_${model}_log.c'
model=psa                -> include-srcs += xtrn/'dpdkx_${model}_digest.c'

x_emit                   -> include-srcs += xtrn/'dpdkx_emit.c'
x_crypto                 -> include-srcs += xtrn/'dpdkx_crypto.c'
x_crypto_dummy           -> include-srcs += xtrn/'dpdkx_crypto_dummy.c'

x_crypto                 -> include-hdrs += dpdkx_crypto.h
x_crypto_dummy           -> include-hdrs += dpdkx_crypto_dummy.h

x_crypto                 -> cflags += -DT4P4S_INIT_CRYPTO
x_crypto                 -> cflags += -Wno-deprecated-declarations

strict                   -> cflags += -DT4P4S_STRICT
suite                    -> cflags += -DT4P4S_TEST_SUITE
dbg                      -> cflags += -DT4P4S_DEBUG=${dbg}
noeal                    -> cflags += -DT4P4S_SUPPRESS_EAL
ctr=off                  -> cflags += -DT4P4S_NO_CONTROL_PLANE
show_hidden_tables       -> cflags += -DT4P4S_SHOW_HIDDEN_TABLES
stats                    -> cflags += -DT4P4S_STATS=${stats}
p4rt                     -> cflags += -DT4P4S_P4RT
lineno                   -> cflags += -DT4P4S_DEBUG_LINENO
lto                      -> cflags += -Dflto=thin
maxbytes                 -> cflags += -DT4P4S_DEBUG_PKT_MAXBYTES={maxbytes}
consts                   -> cflags += -DTEST_CONST_ENTRIES=${consts}

; emits all headers, not only valid ones
emit=all                 -> cflags += -DT4P4S_EMIT=1

p4dbg                    -> p4opts += --p4dbg
p4testcase               -> p4opts += --p4opt=T4P4S_TEST_${p4testcase}
consts                   -> p4opts += --p4opt=TEST_CONST_ENTRIES=${consts}
; possible values, in decreasing order of detail: all, nopath, noext, nofile, nohint
hint                     -> p4opts += -hint=${hint}
recompile                -> p4opts += -recompile

testcase=v1              -> p4opts += --p4opt=USE_V1
testcase=psa             -> p4opts += --p4opt=USE_PSA

testcase=v1              -> model=v1model
testcase=psa             -> model=psa

vetheal                  -> ealopts += --no-pci --vdev net_pcap0,iface=veth0 --vdev net_pcap1,iface=veth1
vethealpcap              -> ealopts += --no-pci --vdev net_pcap0,rx_pcap=input1.pcap,tx_pcap=txpcap0.pcap --vdev net_pcap1,rx_iface=veth1,tx_pcap=txpcap1.pcap
vethports                -> cmdopts += -p 0x0 --config "\"(0,0,0),(1,0,0)\""
vethmode                 -> cflags += -DT4P4S_VETH_MODE

mopt                     -> meson_opts += ${mopt}

crypto_node              -> cflags += -DSTART_CRYPTO_NODE
crypto_node=openssl      -> cflags += -DCRYPTO_NODE_MODE=1
crypto_node=fake         -> cflags += -DCRYPTO_NODE_MODE=2

fake_crypto_time         -> cflags += -DFAKE_CRYPTO_SLEEP_MULTIPLIER=${fake_crypto_time}
crypto_every_n_packet    -> cflags += -DDEBUG__CRYPTO_EVERY_N=${crypto_every_n_packet}
crypto_burst_size        -> cflags += -DCRYPTO_BURST_SIZE=${crypto_burst_size}
crypto_context_pool_size -> cflags += -DCRYPTO_CONTEXT_POOL_SIZE=${crypto_context_pool_size}
crypto_ring_size         -> cflags += -DCRYPTO_RING_SIZE=${crypto_ring_size}

async=off                ->  cflags += -DASYNC_MODE=0
async=on                 ->  cflags += -DASYNC_MODE=1
async=context            ->  cflags += -DASYNC_MODE=1
async=pd                 ->  cflags += -DASYNC_MODE=2
async=skip               ->  cflags += -DASYNC_MODE=3
